// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`dataloader generates expected schema 1`] = `
"type BaseError implements Error {
  message: String!
}

type CallCount {
  calls: Int!
  loaded: Int!
  name: String!
}

type ClassLoadableThing implements Node & TestInterface {
  id: ID!
  idFromInterface: ID!
}

interface Error {
  message: String!
}

interface Node {
  id: ID!
}

type NullableUser implements TestInterface {
  id: ID!
  idFromInterface: ID!
}

type Post {
  content: String!
  id: ID!
  title: String!
}

type Query {
  addOnUser: User!
  classThing: ClassLoadableThing!
  classThingRef: ClassLoadableThing!
  counts: [CallCount!]!
  fromContext1: User!
  fromContext2: User!
  fromContext3: User!
  fromContext4: [User!]!
  fromContext5: [User!]!
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  nullableUser(id: String): NullableUser
  nullableUsers(ids: [String!]): [NullableUser]
  post(id: Int!): Post
  posts(ids: [Int!]!): [Post]
  user(id: String): User
  userNode(id: String): User
  userNodes(ids: [String!]): [UserNode]
  userWithErrors(id: String): QueryUserWithErrorsResult
  users(ids: [String!]): [User]
  usersWithErrors(ids: [String!]): QueryUsersWithErrorsResult
}

union QueryUserWithErrorsResult = BaseError | QueryUserWithErrorsSuccess

type QueryUserWithErrorsSuccess {
  data: User!
}

union QueryUsersWithErrorsResult = BaseError | QueryUsersWithErrorsSuccess

type QueryUsersWithErrorsSuccess {
  data: [User!]!
}

interface TestInterface {
  idFromInterface: ID!
}

type User implements TestInterface {
  id: ID!
  idFromInterface: ID!
  self: User!
}

type UserNode implements Node & TestInterface {
  id: ID!
  idFromInterface: ID!
}
"
`;
